import Foundation

//C: 面向过程
//Swift: 面向对象
//1.万物皆对象
//2.对象有一个抽象的描述: 我的iphone13pro(对象) -> iphone(类)
//3.类: 状态(变量)  行为(函数->方法)

//类: 人
class Person{
      //变量
      var name: String = "大侠"
      //年龄限制：0-150
      var age: Int = 18
      func setAge(age: Int){
           if age > 150{
              self.age = 150
           }else if age < 0{
              self.age = 0
           }else{
              self.age = age
           }           
      }

      //方法
      funcs eat(){
      }
      funcs run(){
      }
      funcs sleep(){
      }
      funcs play(){
        print("\(name)在表演")
      }
}

let pan: Person = Person() //将类实例化为一个对象
//给对象赋值
pan.name = "李逍遥"
pan.setAge = "18"
pan.play()



class Person2{
      //变量
      var name: String = "大侠"
      //年龄限制：0-150
      var age: Int = 0

      //属性
      var Age: Int{
          //赋值调用方法
          set(value){
            if value > 150{
               self.age = 150
            }else if value < 0{
               self.age = 0
            }else{
               self.age = value
            }  
          }
          //取值
          get{
            return age
          }
      }

      //方法
      funcs eat(){
      }
      funcs run(){
      }
      funcs sleep(){
      }
      funcs play(){
        print("\(name)在表演")
      }
}


let cp: Person2 = Person2()
cp.Age = 20 //传到属性的set方法
print(cp.Age) //取值调用get方法





