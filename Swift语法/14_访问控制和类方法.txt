import Foundation

class Person2{
      //成员变量
      var name: String = "大侠"
      //年龄限制：0-150
      //访问控制：public: 所有人可以访问  internal: 别人不可以访问该控制权限  fileprivate:仅当前文件可访问  private: 只能在类中访问
      private var age: Int = 0
      //类变量
      static var cName = "类变量"
      //属性
      var Age: Int{
          //赋值调用方法
          set(value){
            if value > 150{
               self.age = 150
            }else if value < 0{
               self.age = 0
            }else{
               self.age = value
            }  
          }
          //取值
          get{
            return age
          }
      }

      //方法
      funcs eat(){
      }
      funcs run(){
      }
      funcs sleep(){
      }
      funcs play(){
        print("\(name)在表演")
      }
      //类方法
      static func cFunc(){
           print("我是类方法")
      }
}

let cp: Person2 = Person2()
cp.Age = 20 //传到属性的set方法
print(cp.Age) //取值调用get方法

//类变量
print(Person.cName)
//类方法 *不需要实例化就可以调用
Person.cFunc()



class Person3{
    static func test1(){
        print("test1")
    }
    class func test2(){
        print("test2")
    }
}

class Player: Person3{
    override class func test2(){
         print("test3")
    }
/*  不能被重写
    override static func test2(){
         print("test3")
    }
*/
}
Person.test1()
Person.test2()









