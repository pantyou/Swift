import Foundation


//闭包 函数类型的变量

class Person{
   var c: ()->Void = {
       print("我是一个闭包")
   }
   var d: (String, Int)->String = {str, num in
       return "生成新的内容: \(str),\(num)"
   }
}
let pc = Person()
pc.c()
print(pc.d("参数1", 2))
let tmp = pc.d("参数1", 2)
print(tmp)

var a = 18
var b = 20

//交换方法 方法中的值要改变时需使用inout
func swap(num1: inout Int, num2: inout){
     let tmp = num1
     num1 = num2
     num2 = tmp
}
swap(num1: &a, num2: &b)
print(a)
print(b)

//泛型变成Int
func swap2<T>(num1: inout T, num2: inout T){
     let tmp = num1
     num1 = num2
     num2 = tmp
}
swap2(num1: &a, num2: &b)
print(a)
print(b)

var str1 = "魏无羡"
var str2 = "温宁"
//泛型变成String
swap2(num1: &str1, num2: &str2)
print(str1)
print(str2)
